% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insert_where.R
\name{insert_where}
\alias{insert_where}
\alias{insert_where.NULL}
\alias{insert_where.list}
\alias{insert_where.data.frame}
\title{Insert where configurations}
\usage{
insert_where(old, ...)

\method{insert_where}{`NULL`}(old, ...)

\method{insert_where}{list}(old, ..., replace = TRUE)

\method{insert_where}{data.frame}(old, ..., replace = TRUE)
}
\arguments{
\item{old}{The old where configuration.}

\item{...}{The new where element. Can be of \code{list} or \code{data.frame} class.
Note they must have name of \code{"table"}. What's more, to make it work
properly in the whole project, the names should be no other than
\code{c("table", "field", "operator", "values")}.}

\item{replace}{Replace the element with the same \code{table} value or not.
Default is set to replace, set \code{FALSE} to add it anyway (not recommended,
might cause error in further analysis).}
}
\value{
A where configuration of the same format with the old one.
}
\description{
Insert new where configurations into the existed one. This can be useful in
many projects doing minor changes to current where configurations.
}
\details{
This function is intended to modify an existed where configuration. If the
existed one \link[rlang:is_empty]{is_empty()}, the added will be returned as a
\code{\link[=list]{list()}}.
}
\author{
Liang Zhang
}
